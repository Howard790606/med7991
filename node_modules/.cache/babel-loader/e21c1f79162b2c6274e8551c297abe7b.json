{"ast":null,"code":"import _classCallCheck from \"/Users/howard790606/Downloads/med7991/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/howard790606/Downloads/med7991/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/howard790606/Downloads/med7991/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/howard790606/Downloads/med7991/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/howard790606/Downloads/med7991/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/howard790606/Downloads/med7991/src/containers/Blog/MedCalculator/ABG_Interpretation.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nvar ABG_Interpretation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ABG_Interpretation, _Component);\n\n  function ABG_Interpretation(props) {\n    var _this;\n\n    _classCallCheck(this, ABG_Interpretation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ABG_Interpretation).call(this, props));\n\n    _this.handleABG = function () {\n      if (_this.state.pH < 7.36) {\n        if (_this.state.PaCO2 > 44) {\n          if (1.2 * (24 - _this.state.HCO3) - (_this.state.PaCO2 - 40) >= -2 && 1.2 * (24 - _this.state.HCO3) - (_this.state.PaCO2 - 40) <= 2) {\n            _this.setState(function (state) {\n              return {\n                diagnosis: \"Primary respiratory acidosis with appropriate renal response\"\n              };\n            });\n          } else {\n            _this.setState(function (state) {\n              return {\n                diagnosis: \"Primary respiratory acidosis with secondary metalbolic alkalosis\"\n              };\n            });\n          }\n        } else if (_this.state.PaCO2 < 36) {\n          _this.setState(function (state) {\n            return {\n              diagnosis: \"Primary metabolic acidosis\"\n            };\n          });\n        }\n      } else if (_this.state.pH > 7.44) {\n        if (_this.state.PaCO2 > 44) {\n          _this.setState(function (state) {\n            return {\n              diagnosis: \"Primary metabolic alkalosis\"\n            };\n          });\n        } else if (_this.state.PaCO2 < 36) {\n          _this.setState(function (state) {\n            return {\n              diagnosis: \"Primary respiratory alkalosis\"\n            };\n          });\n        }\n      }\n    };\n\n    _this.handleChange_pH = function (e) {\n      return _this.setState({\n        pH: e.target.value\n      });\n    };\n\n    _this.handleChange_PaO2 = function (e) {\n      return _this.setState({\n        PaO2: e.target.value\n      });\n    };\n\n    _this.handleChange_PaCO2 = function (e) {\n      return _this.setState({\n        PaCO2: e.target.value\n      });\n    };\n\n    _this.handleChange_HCO3 = function (e) {\n      return _this.setState({\n        HCO3: e.target.value\n      });\n    };\n\n    _this.handleChange_Na = function (e) {\n      return _this.setState({\n        Na: e.target.value\n      });\n    };\n\n    _this.state = {\n      pH: 7.3,\n      PaO2: 90,\n      PaCO2: 60,\n      HCO3: 32,\n      Na: 132,\n      diagnosis: \"\"\n    };\n    return _this;\n  } //pH: 7.36 - 7.44\n  //PaCO2: 36 - 44 mmHg\n  //HCO3: 22 - 26 mEq/L\n\n\n  _createClass(ABG_Interpretation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"ABG Interpretator (Pending)\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" pH\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.pH,\n        onChange: this.handleChange_pH,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"  PaO2\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.PaO2,\n        onChange: this.handleChange_PaO2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"mmHg\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"  PaCO2\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.PaCO2,\n        onChange: this.handleChange_PaCO2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"mmHg\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"  HCO3\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.HCO3,\n        onChange: this.handleChange_HCO3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"mEg/L\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"  Na\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.Na,\n        onChange: this.handleChange_Na,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"mEg/L\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleABG,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"calculate\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Diagnosis: \", this.state.diagnosis));\n    }\n  }]);\n\n  return ABG_Interpretation;\n}(Component);\n\nexport { ABG_Interpretation as default };","map":{"version":3,"sources":["/Users/howard790606/Downloads/med7991/src/containers/Blog/MedCalculator/ABG_Interpretation.js"],"names":["React","Component","NavLink","ABG_Interpretation","props","handleABG","state","pH","PaCO2","HCO3","setState","diagnosis","handleChange_pH","e","target","value","handleChange_PaO2","PaO2","handleChange_PaCO2","handleChange_HCO3","handleChange_Na","Na"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default class ABG_Interpretation extends Component {\n        constructor(props) {\n          super(props);\n          this.state = { \n            pH : 7.3,\n            PaO2 : 90,\n            PaCO2 : 60,\n            HCO3: 32,\n            Na: 132,\n            diagnosis: \"\"\n         };\n        }\n\n    //pH: 7.36 - 7.44\n    //PaCO2: 36 - 44 mmHg\n    //HCO3: 22 - 26 mEq/L\n\n    handleABG = () => {\n        if(this.state.pH < 7.36){\n            if(this.state.PaCO2 > 44){\n                if((1.2 * (24 - this.state.HCO3) - (this.state.PaCO2 - 40)) >= -2 && (1.2 * (24 - this.state.HCO3) - (this.state.PaCO2 - 40)) <= 2){\n                    this.setState(state => ({ \n                        diagnosis: \"Primary respiratory acidosis with appropriate renal response\"\n                    }))\n                }else{\n                    this.setState(state => ({ \n                        diagnosis: \"Primary respiratory acidosis with secondary metalbolic alkalosis\"\n                    }))\n                }\n            }\n            else if(this.state.PaCO2 < 36){\n                this.setState(state => ({ \n                    diagnosis: \"Primary metabolic acidosis\"\n                }))\n            }\n        }\n        else if(this.state.pH > 7.44){\n            if(this.state.PaCO2 > 44){\n                this.setState(state => ({ \n                    diagnosis: \"Primary metabolic alkalosis\"\n                }))\n            }\n            else if(this.state.PaCO2 < 36){\n                this.setState(state => ({ \n                    diagnosis: \"Primary respiratory alkalosis\"\n                }))\n            }\n        }\n    }\n    handleChange_pH = (e) => this.setState({pH: e.target.value});\n    handleChange_PaO2 = (e) => this.setState({PaO2: e.target.value});\n    handleChange_PaCO2 = (e) => this.setState({PaCO2: e.target.value});\n    handleChange_HCO3 = (e) => this.setState({HCO3: e.target.value});\n    handleChange_Na = (e) => this.setState({Na: e.target.value});\n  \n\n    render() {\n        return (\n            <div>\n                <h2>ABG Interpretator (Pending)</h2>\n                <label> pH<input type=\"number\" value={this.state.pH} onChange={this.handleChange_pH}/></label>\n                <label>  PaO2<input type=\"number\" value={this.state.PaO2} onChange={this.handleChange_PaO2}/>mmHg</label>\n                <label>  PaCO2<input type=\"number\" value={this.state.PaCO2} onChange={this.handleChange_PaCO2}/>mmHg</label>\n                <label>  HCO3<input type=\"number\" value={this.state.HCO3} onChange={this.handleChange_HCO3}/>mEg/L</label>\n                <label>  Na<input type=\"number\" value={this.state.Na} onChange={this.handleChange_Na}/>mEg/L</label>\n                <span>\n                    <button onClick={this.handleABG}>calculate</button>\n                </span>\n                <h3>Diagnosis: {this.state.diagnosis}</h3>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}